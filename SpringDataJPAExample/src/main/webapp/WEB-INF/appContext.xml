<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-lazy-init="false">

	<context:annotation-config />
	<context:component-scan base-package="com.sarf.domain" />
	<jpa:repositories base-package="com.sarf.repository" />
	
	<context:component-scan base-package="com.sarf.service" />
	<context:component-scan base-package="com.sarf.restservice" />
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- Apache CXF settings -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<bean id="jackSonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
	<bean id="employeeServiceImpl" class="com.sarf.restservice.EmployeeRestServiceImpl" />
	<jaxrs:server id="employeeServiceMgmt" address="/">
		<jaxrs:serviceBeans>
			<ref bean="employeeServiceImpl" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<ref bean="jackSonProvider" />
		</jaxrs:providers>
	</jaxrs:server>


	<!-- 1. Create datasource from JNDI DataSource provided by the container -->
	<!-- <jee:jndi-lookup id="myDataSource" jndi-name="java:/mydb" expected-type="javax.sql.DataSource" 
		/> -->

	<!-- HSQL-DB memory database; for testing only -->
	<bean id="myDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" />
	</bean>

	<!-- Intialize static data into h2 database -->
	<jdbc:initialize-database data-source="myDataSource"
		ignore-failures="DROPS">
		<jdbc:script location="classpath:data.sql" />
	</jdbc:initialize-database>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="persistenceUnitName" value="my-jpa" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="myDataSource" />
	</bean>

	<bean id="txTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>
</beans>